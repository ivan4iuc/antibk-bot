
const puppeteer = require('puppeteer-core');

(async () => {
  const browser = await puppeteer.launch({
    headless: false,
    executablePath: '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome',
    defaultViewport: null,
    args: ['--start-maximized']
  });

  const page = await browser.newPage();
  await page.goto('https://antibk.org/');

  console.log('‚è≥ –ü–æ–¥–æ–∂–¥–∏ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ª–æ–≥–∏–Ω–∞...');
  await new Promise(resolve => setTimeout(resolve, 30000));

  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É "–ü–æ–µ–¥–∏–Ω–∫–∏"
  await page.goto('https://antibk.org/main.php?zayvka=1');
  await page.waitForTimeout(3000);

  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ"
  await page.goto('https://antibk.org/main.php?zayvka=1&r=7&rnd=1');
  await page.waitForTimeout(3000);

  const battleLogLinks = [];

  for (let i = 0; i < 5; i++) {
    console.log(`üìÖ –î–µ–Ω—å ${i + 1}`);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –ª–æ–≥–∏ –±–æ—ë–≤
    const links = await page.$$eval('a[href^="logs.php?log="]', els =>
      els.map(el => el.href)
    );

    console.log(`üîó –ù–∞–π–¥–µ–Ω–æ ${links.length} –ª–æ–≥–æ–≤`);
    battleLogLinks.push(...links);

    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
    const prevDayLink = await page.$('a[href*="logs2="]');
    if (prevDayLink) {
      const href = await page.evaluate(el => el.href, prevDayLink);
      await page.goto(href);
      await page.waitForTimeout(3000);
    } else {
      console.log('‚ùå –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      break;
    }
  }

  console.log('‚úÖ –°–±–æ—Ä –ª–æ–≥–æ–≤ –∑–∞–≤–µ—Ä—à—ë–Ω. –í–æ—Ç —Å—Å—ã–ª–∫–∏:');
  console.log(battleLogLinks);

  await browser.close();
})();
